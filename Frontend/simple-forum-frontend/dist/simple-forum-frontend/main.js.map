{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".form {\\r\\n  margin: 2em;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.text-area-height {\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0NBQ2I7O0FBRUQ7RUFDRSxZQUFZO0NBQ2I7O0FBRUQ7Q0FDQyIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0ge1xyXG4gIG1hcmdpbjogMmVtO1xyXG59XHJcblxyXG4uZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi50ZXh0LWFyZWEtaGVpZ2h0IHtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"flex-horizontal fill\\\">\\r\\n  <mat-toolbar>\\r\\n    {{title}}\\r\\n  </mat-toolbar>\\r\\n  <mat-tab-group class=\\\"fill\\\"  [(selectedIndex)]=\\\"selectedTab\\\">\\r\\n    <mat-tab label=\\\"Overview\\\" (selectedTabChange)=\\\"Reload()\\\">\\r\\n      <ng-container *ngIf=\\\"!topics\\\">\\r\\n        No Topics yet.\\r\\n      </ng-container>\\r\\n      <!--<mat-nav-list>\\r\\n        <a mat-list-item *ngFor=\\\"let topic of topics\\\">{{topic.title}}</a>\\r\\n      </mat-nav-list>!-->\\r\\n      <ng-container *ngIf=\\\"topics\\\">\\r\\n        <mat-accordion>\\r\\n          <mat-expansion-panel *ngFor=\\\"let topic of topics\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                {{topic.title}}\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                {{topic.posts[0].content.slice(0,10)+'...'}}\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n\\r\\n            Content in here...\\r\\n          </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n      </ng-container>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"New Topic\\\">\\r\\n      <form class=\\\"form\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput placeholder=\\\"Title\\\" name=\\\"Title\\\" [(ngModel)]=\\\"nt_title\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"full-width text-area-height\\\">\\r\\n          <textarea matInput\\r\\n                    cdkTextareaAutosize\\r\\n                    placeholder=\\\"Your post\\\"\\r\\n                    name=\\\"Post\\\"\\r\\n                    [(ngModel)]=\\\"nt_content\\\"></textarea>\\r\\n        </mat-form-field>\\r\\n        <button\\r\\n          [disabled]=\\\"nt_title==='' || nt_content===''\\\"\\r\\n          mat-raised-button\\r\\n          color=\\\"primary\\\"\\r\\n          (click)=\\\"createTopic()\\\">Create Topic</button>\\r\\n      </form>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'Verteilte Systeme Labor - Mini Forum';\r\n  selectedTab: number = 0;\r\n\r\n  url = 'http://localhost:8080/';\r\n  headers: HttpHeaders = null;\r\n\r\n  nt_title = '';\r\n  nt_content = '';\r\n\r\n  topics:ITopic[];\r\n\r\n  constructor(private http:HttpClient){\r\n    this.headers = new HttpHeaders();\r\n    this.headers.append('Content-Type', 'application/json');\r\n    this.Reload();\r\n  }\r\n\r\n  Reload(){\r\n    this.http.get(this.url+'topic/all').subscribe((value) => {\r\n      this.topics = value as ITopic[];\r\n    });\r\n  }\r\n\r\n  createTopic(){\r\n    let topic: ITopic = {} as ITopic;\r\n    let post: IPost = {} as IPost;\r\n\r\n    topic.title = this.nt_title;\r\n    post.content = this.nt_content;\r\n    topic.posts = [post];\r\n\r\n    this.http.post(this.url+'topic', topic,{ headers: this.headers}).subscribe(() => {\r\n      this.Reload();\r\n      this.selectedTab = 0;\r\n    });\r\n\r\n  }\r\n}\r\n\r\ninterface ITopic {\r\n  id:number;\r\n  title:string;\r\n  created:number;\r\n  posts: IPost[];\r\n}\r\n\r\ninterface IPost {\r\n  id: number;\r\n  content:string;\r\n  created:number;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { MatToolbarModule } from \"@angular/material\";\r\nimport { MatTabsModule } from \"@angular/material\";\r\nimport { MatSidenavModule } from \"@angular/material\";\r\nimport { MatListModule } from \"@angular/material\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TextFieldModule } from '@angular/cdk/text-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatExpansionModule,\r\n    TextFieldModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}